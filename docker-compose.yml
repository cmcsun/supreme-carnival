version: '3.9'

services:
  
  traefik:
    image: traefik:v2.10
    restart: always
    container_name: traefik
    ports:
      - published: 80 # change here to 8080
        target: 80
        mode: host
      - published: 443 # change here to 8443
        target: 443
        mode: host
      - published: 8050
        target: 8050
        mode: host
    command:
      - "--providers.docker=true"
      - "--providers.docker.network=tproxy"
      - "--providers.docker.exposedByDefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
      - "--entryPoints.web.http.redirections.entryPoint.scheme=https"
      - "--entryPoints.websecure.http.tls=true"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=chris@zignage.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.websecure.address=:443"
      - "--api.dashboard=true"
      - "--log.level=INFO"
      - "--accesslog=true"
      - "--api.debug=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--metrics.prometheus=true"
      - "--providers.docker.watch"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
    volumes:
      - ./letsencrypt:/letsencrypt # Volume for certs (TLS)
      - /var/run/docker.sock:/var/run/docker.sock # Volume for docker admin
      - /home/zignage/traefik/supreme-carnival/.htpasswd:/.htpasswd

    networks:
      - tproxy
      - appnet
      - nginxrp
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
      - "traefik.http.routers.traefik-ui.rule=Host(`${TRAEFIK_URL}`)"
      - "traefik.http.routers.traefik-ui.service=api@internal"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_BASIC_AUTH}"
      - "traefik.http.middlewares.traefik-auth.basicauth.removeheader=true"
      - "traefik.http.routers.traefik-ui.middlewares=traefik-auth"

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "3333:3333"
    volumes:
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    environment:
      VIRTUAL_HOST: graf1.ztest.sobe.world
      LETSENCRYPT_HOST: graf1.ztest.sobe.world
      VIRTUAL_PORT: 445

  nginx-proxy-acme:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme:/etc/acme.sh
    environment:
      DEFAULT_EMAIL: raina@autistici.org
    depends_on:
      - nginx-proxy
    networks:
      - nginxrp


  whoami:
    image: traefik/whoami:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mywhoami.rule=Host(`whoami1.ztest.sobe.world`)"
      - "traefik.http.routers.mywhoami.entrypoints=websecure"
      - "traefik.http.services.mywhoami.loadbalancer.server.port=80"
      - "traefik.http.routers.mywhoami.tls.certresolver=myresolver"
      - "traefik.docker.network=tproxy"
    networks:
      - tproxy

        #grafana:
        # image: grafana/grafana:latest
        #user: root
        #volumes:
        # - ${GRAFANA_VOLUME}:/var/lib/grafana
        #- ./compose/grafana/provisioning/:/etc/grafana/provisioning
        #- ./infrastructure/config/grafana/grafana.ini:/etc/grafana/grafana.ini
        #- ./infrastructure/config/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
        # environment:
        #GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: "true"
        #GF_INSTALL_PLUGINS: grafana-piechart-panel
        #VIRTUAL_HOST: graf1.ztest.sobe.world
        #restart: unless-stopped
        #logging:
        #options:
        # max-size: "10m"
        # max-file: "3"     


  grafana:
    image: grafana/grafana:latest
    build:
      context: ""
      dockerfile: Dockerfile
    container_name: grafana
    environment:
      GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: "true"
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    ports:
      - "3000:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`graf1.ztest.sobe.world`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - grafnet
      - appnet
      - tproxy


  prometheus:
    image: prom/prometheus
    user: root
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ${PROM_VOLUME}:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.size=256MB'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prom1.ztest.sobe.world`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.tls.certresolver=myresolver"
      - "traefik.docker.network=tproxy"
    networks:
      - appnet
      - tproxy
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  mongodb:
    restart: always
    container_name: mongodb
    image: mongo:4.4.6
    tty: true
    env_file:
      - .env
    volumes:
      - ./meshcentral/mongodb_data:/data/db
    expose:
      - 27017
    networks:
      - meshcentral-tier

  meshcentral:
    restart: always
    container_name: meshcentral
    image: typhonragewind/meshcentral:latest
    depends_on:
      - mongodb
    ports:
      - 4430:4430
    volumes:
      - ./meshcentral/data:/opt/meshcentral/meshcentral-data
      - ./meshcentral/user_files:/opt/meshcentral/meshcentral-files
      - ./meshcentral/backup:/opt/meshcentral/meshcentral-backup
      - ./meshcentral/web:/opt/meshcentral/meshcentral-web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.meshcentral-secured.entrypoints=websecure"
      - "traefik.http.routers.meshcentral-secured.rule=Host(`mesh1.ztest.sobe.world`)"
      - "traefik.http.services.meshcentral.loadbalancer.server.port=4430"
      - "traefik.docker.network=tproxy"
    networks:
      - meshcentral-tier
      - tproxy
    environment:
      - HOSTNAME=mesh1.ztest.sobe.world     #your hostname
      - REVERSE_PROXY=localhost     #set to your reverse proxy IP if you want to put meshcentral behind a reverse proxy
      - REVERSE_PROXY_TLS_PORT=443
      - IFRAME=false    #set to true if you wish to enable iframe support
      - ALLOW_NEW_ACCOUNTS=true    #set to false if you want disable self-service creation of new accounts besides the first (admin)
      - WEBRTC=false  #set to true to enable WebRTC - per documentation it is not officially released with meshcentral, but is solid enough to work with. Use with caution
      - BACKUPS_PW=MyAwesomePasswordPleaseChangeMe #password for the autobackup function
      - BACKUP_INTERVAL=24 # Interval in hours for the autobackup function
      - BACKUP_KEEP_DAYS=10 #number of days of backups the function keeps
      - VIRTUAL_HOST=mesh1.ztest.sobe.world
      - VIRTUAL_PORT=4430
      - NODE_ENV=production
      - LETSENCRYPT_HOST=mesh1.ztest.sobe.world
      - LETSENCRYPT_EMAIL=ggmethos@autistici.org

networks:
  meshcentral-tier:
    name: meshcentral-tier
    driver: bridge
  tproxy:
    name: tproxy
  appnet:
    name: appnet
  nginxrp:
    name: nginxrp
  web:
    name: web
  grafnet:
    name: grafnet
    driver: bridge


volumes: 
  letsencrypt:
    name: letsencrypt
  certs:
  vhost:
  html:
  acme:
  grafana-data:
