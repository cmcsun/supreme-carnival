version: '3.9'

services:
  traefik:


    image: traefik:v2.10
    restart: always
    container_name: traefik
    ports:
      - published: 80 # change here to 8080
        target: 80
        protocol: tcp
        mode: host
      - published: 443 # change here to 8443
        target: 443
        protocol: tcp
        mode: host
      - published: 8080
        target: 8080
        protoncol: tcp
        mode: host
    command:
      - --providers.docker=true
      - --providers.docker.network=proxy
      - --providers.docker.exposedByDefault=false
      - --entryPoints.web.address=:80
      - --entryPoints.web.http.redirections.entryPoint.to=websecure
      - --entryPoints.web.http.redirections.entryPoint.scheme=https
      - --entryPoints.websecure.http.tls=true
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
      - --certificatesresolvers.myresolver.acme.email=chris@zignage.com
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      - --entrypoints.websecure.address=:443
      - "--api.dashboard=true"
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - --api.debug=true
    volumes:
      - ./letsencrypt:/letsencrypt # Volume for certs (TLS)
      - /var/run/docker.sock:/var/run/docker.sock # Volume for docker admin
      - /home/zignage/traefik/supreme-carnival/.htpasswd:/.htpasswd
      - ./traefik.yaml:/etc/traefik/traefik.yml:ro

    networks:
      - proxy

    labels:
      - traefik.enable=true
      - "traefik.web.routers.traefik.rule=Host(`dashboard.mmtest.sobe.world`)"
      - "traefik.web.routers.traefik.service=api@internal"
      - "traefik.web.routers.traefik.entrypoints=websecure"
      - "traefik.web.routers.traefik.middlewares=myauth"
      - "traefik.web.routers.traefik.tls.certresolver=myresolver"

  whoami:
    image: traefik/whoami:latest
    labels:
      - "traefik.enable=true"
      - "traefik.web.routers.mywhoami.rule=Host(`whoami.mmtest.sobe.world`) || Host(`www.whoami.mmtest.sobe.world`)"
      - "traefik.web.services.mywhoami.loadbalancer.server.port=80"
      - "traefik.web.routers.mywhoami.entryPoints=websecure"
      - "traefik.web.routers.mywhoami.middlewares=mywwwredirect"
      - "traefik.web.routers.meshcentral-secured.tls.certresolver=myresolver"
      - "traefik.web.routers.meshcentral.middlewares=mywwwredirect"
      - "traefik.docker.network=proxy"
    networks:
      - proxy
    hostname: docker.internal.localhost

  mongodb:
    restart: always
    container_name: mongodb
    image: mongo:4.4.6
    tty: true
    env_file:
      - .env
    volumes:
      - ./meshcentral/mongodb_data:/data/db
    expose:
      - 27017
    networks:
      - meshcentral-tier

  meshcentral:
    restart: always
    container_name: meshcentral
    image: ghcr.io/ylianst/meshcentral:latest
    depends_on:
      - mongodb
    ports:
      - 4430:4430
    volumes:
      - ./meshcentral/data:/opt/meshcentral/meshcentral-data
      - ./meshcentral/user_files:/opt/meshcentral/meshcentral-files
      - ./meshcentral/backup:/opt/meshcentral/meshcentral-backup
      - ./meshcentral/web:/opt/meshcentral/meshcentral-web
    labels:
      - "traefik.enable=true"
      - "traefik.web.routers.meshcentral-secured.entrypoints=websecure"
      - "traefik.web.routers.meshcentral-secured.rule=Host(`mesh.mmtest.sobe.world`)"
      - "traefik.web.routers.meshcentral-secured.entrypoints=websecure"
      - "traefik.web.routers.meshcentral-secured.tls.certresolver=myresolver"
      - "traefik.web.routers.meshcentral.middlewares=mywwwredirect"
      - "traefik.web.services.meshcentral.loadbalancer.server.port=4430"
      - "traefik.docker.network=proxy"
    networks:
      - meshcentral-tier
      - proxy

networks:
  meshcentral-tier:
    driver: bridge
  proxy:
    external: true

volumes: 
  letsencrypt:
    name: letsencrypt
