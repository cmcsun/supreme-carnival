version: '3.7'

version: '3.9'

services:
  traefik:
    image: traefik:v2.9
    ports:
      - published: 80 # change here to 8080
        target: 80
        protocol: tcp
        mode: host
      - published: 443 # change here to 8443
        target: 443
        protocol: tcp
        mode: host
    networks:
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /root/traefik-certificates:/traefik-certificates
    command:
      --providers.docker=true
      --providers.docker.network=proxy
      --providers.docker.exposedByDefault=false
      --entryPoints.web.address=:80
      --entryPoints.web.http.redirections.entryPoint.to=websecure
      --entryPoints.web.http.redirections.entryPoint.scheme=https
      --entryPoints.websecure.address=:443
      --entryPoints.websecure.http.tls=true
      --api.debug=true
      --api.dashboard=true
      --log.level=DEBUG
      --accesslog=true
      # for changed external ports you need to use dnschallenge
      --certificatesResolvers.myresolver.acme.email=mail@example.com
      --certificatesResolvers.myresolver.acme.tlschallenge=true
      --certificatesResolvers.myresolver.acme.storage=/traefik-certificates/acme.json
    labels:
      - traefik.enable=true
      - traefik.http.routers.mydashboard.entrypoints=websecure
      - traefik.http.routers.mydashboard.rule=Host(`traefik.example.com`)
      - traefik.http.routers.mydashboard.tls.certresolver=myresolver
      - traefik.http.routers.mydashboard.service=api@internal
      - traefik.http.routers.mydashboard.middlewares=myauth
      - traefik.http.middlewares.myauth.basicauth.users=test:$apr1$H6uskkkW$IgXLP6ewTrSuBkTrqE8wj/

  whoami:
    image: traefik/whoami:v1.8
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.mywhoami.entrypoints=websecure
      - traefik.http.routers.mywhoami.rule=Host(`example.com`) || Host(`www.example.com`)
      - traefik.http.routers.mywhoami.tls.certresolver=myresolver
      - traefik.http.services.mywhoami.loadbalancer.server.port=80

networks:
  proxy:
    name: proxy
    attachable: true


services:
  traefik:
    image: traefik:v2.9
    ports:
      - published: 80 # change here to 8080
        target: 80
        protocol: tcp
        mode: host
      - published: 443 # change here to 8443
        target: 443
        protocol: tcp
        mode: host
    networks:
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /root/traefik-certificates:/traefik-certificates
    command:
      --providers.docker=true
      --providers.docker.network=proxy
      --providers.docker.exposedByDefault=false
      --entryPoints.web.address=:80
      --entryPoints.web.http.redirections.entryPoint.to=websecure
      --entryPoints.web.http.redirections.entryPoint.scheme=https
      --entryPoints.websecure.address=:443
      --entryPoints.websecure.http.tls=true
      --api.debug=true
      --api.dashboard=true
      --log.level=DEBUG
      --accesslog=true
      # for changed external ports you need to use dnschallenge
      --certificatesResolvers.myresolver.acme.email=mail@example.com
      --certificatesResolvers.myresolver.acme.tlschallenge=true
      --certificatesResolvers.myresolver.acme.storage=/traefik-certificates/acme.json
    labels:
      - traefik.enable=true
      - traefik.http.routers.mydashboard.entrypoints=websecure
      - traefik.http.routers.mydashboard.rule=Host(`traefik.example.com`)
      - traefik.http.routers.mydashboard.tls.certresolver=myresolver
      - traefik.http.routers.mydashboard.service=api@internal
      - traefik.http.routers.mydashboard.middlewares=myauth
      - traefik.http.middlewares.myauth.basicauth.users=test:$apr1$H6uskkkW$IgXLP6ewTrSuBkTrqE8wj/

  whoami:
    image: traefik/whoami:v1.8
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.mywhoami.entrypoints=websecure
      - traefik.http.routers.mywhoami.rule=Host(`example.com`) || Host(`www.example.com`)
      - traefik.http.routers.mywhoami.tls.certresolver=myresolver
      - traefik.http.services.mywhoami.loadbalancer.server.port=80

networks:
  proxy:
    name: proxy
    attachable: true



services:
  traefik:


    image: traefik:v2.10
    restart: always
    container_name: traefik
    ports:
      - "80:80" # http
      - "443:443" # https
      - "8080:8080"
    command:
      ## Provider Settings - https://docs.traefik.io/providers/docker/#provider-configuration ##
      - --providers.docker=true # Set docker as the provider for traefik
      - --providers.docker.exposedbydefault=false # You need to whitelist containers that will be exposed to traefik
      - --providers.docker.network=proxy # Use the docker network web for communication between traefik and containser
      - --entrypoints.web.address=:80 # Define an entrypoint for port :80 named web (this can be whatever)
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
      - --certificatesresolvers.myresolver.acme.email=chris@zignage.com
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      - --entrypoints.websecure.address=:443
      - "--api.dashboard=true"
      - "--log.level=DEBUG"
      - "--accesslog=true"
    volumes:
      - ./letsencrypt:/letsencrypt # Volume for certs (TLS)
      - /var/run/docker.sock:/var/run/docker.sock # Volume for docker admin
      - /home/zignage/traefik/supreme-carnival/.htpasswd:/.htpasswd
      - ./traefik.yaml:/etc/traefik/traefik.yml:ro

    networks:
      - proxy

    labels:
      - traefik.enable=true
      - "traefik.web.routers.traefik.rule=Host(`dashboard.mmtest.sobe.world`)"
      - "traefik.web.routers.traefik.service=api@internal"
      - "traefik.web.routers.traefik.entrypoints=websecure"
      - "traefik.web.routers.traefik.middlewares=myauth"
      - "traefik.web.routers.traefik.tls.certresolver=myresolver"

  whoami:
    image: traefik/whoami
    labels:
      - "traefik.enable=true"
      - "traefik.web.routers.mywhoami.rule=Host(`whoami.mmtest.sobe.world`) || Host(`www.whoami.mmtest.sobe.world`)"
      - "traefik.web.services.mywhoami.loadbalancer.server.port=80"
      - "traefik.web.routers.mywhoami.entryPoints=web"
      - traefik.web.middlewares.mywwwredirect.redirectregex.regex=^https://www\.(.*)
      - traefik.web.middlewares.mywwwredirect.redirectregex.replacement=https://$${1}
      - "traefik.web.routers.mywhoami.middlewares=mywwwredirect"
    networks:
      - proxy
    hostname: docker.internal.localhost

  mongodb:
    restart: always
    container_name: mongodb
    image: mongo:4.4.6
    tty: true
    env_file:
      - .env
    volumes:
      - ./meshcentral/mongodb_data:/data/db
    expose:
      - 27017
    networks:
      - meshcentral-tier

  meshcentral:
    restart: always
    container_name: meshcentral
    image: ghcr.io/ylianst/meshcentral:latest
    depends_on:
      - mongodb
    ports:
      - 4430:4430
    volumes:
      - ./meshcentral/data:/opt/meshcentral/meshcentral-data
      - ./meshcentral/user_files:/opt/meshcentral/meshcentral-files
      - ./meshcentral/backup:/opt/meshcentral/meshcentral-backup
      - ./meshcentral/web:/opt/meshcentral/meshcentral-web
    labels:
      - "traefik.enable=true"
      - "traefik.web.routers.meshcentral-web.rule=Host(`mesh.mmtest.sobe.world`)"
      - "traefik.web.routers.meshcentral-web.entrypoints=web"
      - "traefik.web.routers.meshcentral-secured.rule=Host(`mesh.mmtest.sobe.world`)"
      - "traefik.web.routers.meshcentral-secured.entrypoints=websecure"
      - "traefik.web.routers.meshcentral-secured.tls.certresolver=myresolver"
      - "traefik.web.services.meshcentral.loadbalancer.server.port=4430"
      - "traefik.docker.network=web"
    networks:
      - meshcentral-tier

networks:
  meshcentral-tier:
    driver: bridge
  reverse_proxy:
    external: true
  proxy:
    external: true

volumes: 
  letsencrypt:
    name: letsencrypt
