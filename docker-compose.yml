version: '3.7'

services:
  traefik:
    image: traefik:v3.0
    restart: always
    container_name: traefik
    ports:
      - '80:80' # http
      - '443:443' # https
      - '8080:8080' #dashboard port
    command:
      ## Provider Settings - https://docs.traefik.io/providers/docker/#provider-configuration ##
      - --providers.docker=true # Set docker as the provider for traefik
      - --providers.docker.exposedbydefault=false # You need to whitelist containers that will be exposed to traefik
      - --providers.docker.network=proxy # Use the docker network web for communication between traefik and containser
      - --entrypoints.web.address=:80 # Define an entrypoint for port :80 named web (this can be whatever)
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
      - --certificatesresolvers.myresolver.acme.email=chris@zignage.com
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      - --entrypoints.websecure.address=:443
      - "--api.dashboard=true"
      - "--log.level=DEBUG"
      - --entrypoints.http.address=:8080
    volumes:
      - ./letsencrypt:/letsencrypt # Volume for certs (TLS)
      - /var/run/docker.sock:/var/run/docker.sock # Volume for docker admin
        #- ./traefik.yaml:/etc/traefik/traefik.yml:ro
      - /home/zignage/traefik/supreme-carnival/.htpasswd:/.htpasswd

    networks:
      - web # Tell the container that it has access to this network
      - proxy

    labels:
      - traefik.enable=true
      - traefik.http.middlewares.myauth.basicauth.users=admin:$apr1$fbTzrrUv$A69VmOgtUUE5YcEwpxJHe/
      - traefik.http.routers.mydashboard.rule=Host(`dashboard.mmtest.sobe.world, www.dashboard.mmtest.sobe.world`)
      - traefik.http.routers.mydashboard.service=api@internal

  mongodb:
    restart: always
    container_name: mongodb
    image: mongo:4.4.6
    tty: true
    env_file:
      - .env
    volumes:
      - ./meshcentral/mongodb_data:/data/db
    expose:
      - 27017
    networks:
      - meshcentral-tier
      - web

  meshcentral:
    restart: always
    container_name: meshcentral
    # use the official meshcentral container
    image: ghcr.io/ylianst/meshcentral:latest
    depends_on:
      - mongodb
    ports:
      - 4430:4430
    volumes: # The volumes will be created automaticly if they do not exists. The only directory that should exist when installing fresh is is meshcentral/data
      - ./meshcentral/data:/opt/meshcentral/meshcentral-data
      - ./meshcentral/user_files:/opt/meshcentral/meshcentral-files
      - ./meshcentral/backup:/opt/meshcentral/meshcentral-backup
      - ./meshcentral/web:/opt/meshcentral/meshcentral-web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.meshcentral-web.rule=Host(`traefik.sobe.name`)"
      - "traefik.http.routers.meshcentral-web.entrypoints=web"
      - "traefik.http.routers.meshcentral-web.middlewares=redirect@file"
      - "traefik.http.routers.meshcentral-secured.rule=Host(`traefik.sobe.name`)"
      - "traefik.http.routers.meshcentral-secured.entrypoints=websecure"
      - "traefik.http.routers.meshcentral-secured.tls.certresolver=mytlschallenge"
      - "traefik.http.services.meshcentral.loadbalancer.server.port=4430"
      - "traefik.docker.network=web"
    networks:
      - meshcentral-tier
      - web

  whoami:
    image: traefik/whoami
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mywhoami.rule=Host(`whoami.mmtest.sobe.world`) || Host(`www.whoami.mmtest.sobe.world`)"
      - "traefik.http.services.mywhoami.loadbalancer.server.port=80"
      - traefik.http.middlewares.mywwwredirect.redirectregex.regex=^https://www\.(.*)
      - traefik.http.middlewares.mywwwredirect.redirectregex.replacement=https://$${1}
      - "traefik.http.routers.mywhoami.middlewares=mywwwredirect"
    networks:
      - proxy


networks:
  meshcentral-tier:
    driver: bridge
  reverse_proxy:
    external: true
  web:
    external: true
  proxy:
    name: proxy

volumes: 
  letsencrypt:
    name: letsencrypt
